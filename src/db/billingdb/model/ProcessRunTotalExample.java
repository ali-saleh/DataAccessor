package db.billingdb.model;

import java.util.ArrayList;
import java.util.List;

public class ProcessRunTotalExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table process_run_total
     *
     * @mbggenerated Tue Feb 18 21:28:38 IST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table process_run_total
     *
     * @mbggenerated Tue Feb 18 21:28:38 IST 2014
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table process_run_total
     *
     * @mbggenerated Tue Feb 18 21:28:38 IST 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_run_total
     *
     * @mbggenerated Tue Feb 18 21:28:38 IST 2014
     */
    public ProcessRunTotalExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_run_total
     *
     * @mbggenerated Tue Feb 18 21:28:38 IST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_run_total
     *
     * @mbggenerated Tue Feb 18 21:28:38 IST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_run_total
     *
     * @mbggenerated Tue Feb 18 21:28:38 IST 2014
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_run_total
     *
     * @mbggenerated Tue Feb 18 21:28:38 IST 2014
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_run_total
     *
     * @mbggenerated Tue Feb 18 21:28:38 IST 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_run_total
     *
     * @mbggenerated Tue Feb 18 21:28:38 IST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_run_total
     *
     * @mbggenerated Tue Feb 18 21:28:38 IST 2014
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_run_total
     *
     * @mbggenerated Tue Feb 18 21:28:38 IST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_run_total
     *
     * @mbggenerated Tue Feb 18 21:28:38 IST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_run_total
     *
     * @mbggenerated Tue Feb 18 21:28:38 IST 2014
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table process_run_total
     *
     * @mbggenerated Tue Feb 18 21:28:38 IST 2014
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andProcess_run_idIsNull() {
            addCriterion("process_run_id is null");
            return (Criteria) this;
        }

        public Criteria andProcess_run_idIsNotNull() {
            addCriterion("process_run_id is not null");
            return (Criteria) this;
        }

        public Criteria andProcess_run_idEqualTo(Integer value) {
            addCriterion("process_run_id =", value, "process_run_id");
            return (Criteria) this;
        }

        public Criteria andProcess_run_idNotEqualTo(Integer value) {
            addCriterion("process_run_id <>", value, "process_run_id");
            return (Criteria) this;
        }

        public Criteria andProcess_run_idGreaterThan(Integer value) {
            addCriterion("process_run_id >", value, "process_run_id");
            return (Criteria) this;
        }

        public Criteria andProcess_run_idGreaterThanOrEqualTo(Integer value) {
            addCriterion("process_run_id >=", value, "process_run_id");
            return (Criteria) this;
        }

        public Criteria andProcess_run_idLessThan(Integer value) {
            addCriterion("process_run_id <", value, "process_run_id");
            return (Criteria) this;
        }

        public Criteria andProcess_run_idLessThanOrEqualTo(Integer value) {
            addCriterion("process_run_id <=", value, "process_run_id");
            return (Criteria) this;
        }

        public Criteria andProcess_run_idIn(List<Integer> values) {
            addCriterion("process_run_id in", values, "process_run_id");
            return (Criteria) this;
        }

        public Criteria andProcess_run_idNotIn(List<Integer> values) {
            addCriterion("process_run_id not in", values, "process_run_id");
            return (Criteria) this;
        }

        public Criteria andProcess_run_idBetween(Integer value1, Integer value2) {
            addCriterion("process_run_id between", value1, value2, "process_run_id");
            return (Criteria) this;
        }

        public Criteria andProcess_run_idNotBetween(Integer value1, Integer value2) {
            addCriterion("process_run_id not between", value1, value2, "process_run_id");
            return (Criteria) this;
        }

        public Criteria andCurrency_idIsNull() {
            addCriterion("currency_id is null");
            return (Criteria) this;
        }

        public Criteria andCurrency_idIsNotNull() {
            addCriterion("currency_id is not null");
            return (Criteria) this;
        }

        public Criteria andCurrency_idEqualTo(Integer value) {
            addCriterion("currency_id =", value, "currency_id");
            return (Criteria) this;
        }

        public Criteria andCurrency_idNotEqualTo(Integer value) {
            addCriterion("currency_id <>", value, "currency_id");
            return (Criteria) this;
        }

        public Criteria andCurrency_idGreaterThan(Integer value) {
            addCriterion("currency_id >", value, "currency_id");
            return (Criteria) this;
        }

        public Criteria andCurrency_idGreaterThanOrEqualTo(Integer value) {
            addCriterion("currency_id >=", value, "currency_id");
            return (Criteria) this;
        }

        public Criteria andCurrency_idLessThan(Integer value) {
            addCriterion("currency_id <", value, "currency_id");
            return (Criteria) this;
        }

        public Criteria andCurrency_idLessThanOrEqualTo(Integer value) {
            addCriterion("currency_id <=", value, "currency_id");
            return (Criteria) this;
        }

        public Criteria andCurrency_idIn(List<Integer> values) {
            addCriterion("currency_id in", values, "currency_id");
            return (Criteria) this;
        }

        public Criteria andCurrency_idNotIn(List<Integer> values) {
            addCriterion("currency_id not in", values, "currency_id");
            return (Criteria) this;
        }

        public Criteria andCurrency_idBetween(Integer value1, Integer value2) {
            addCriterion("currency_id between", value1, value2, "currency_id");
            return (Criteria) this;
        }

        public Criteria andCurrency_idNotBetween(Integer value1, Integer value2) {
            addCriterion("currency_id not between", value1, value2, "currency_id");
            return (Criteria) this;
        }

        public Criteria andTotal_invoicedIsNull() {
            addCriterion("total_invoiced is null");
            return (Criteria) this;
        }

        public Criteria andTotal_invoicedIsNotNull() {
            addCriterion("total_invoiced is not null");
            return (Criteria) this;
        }

        public Criteria andTotal_invoicedEqualTo(Double value) {
            addCriterion("total_invoiced =", value, "total_invoiced");
            return (Criteria) this;
        }

        public Criteria andTotal_invoicedNotEqualTo(Double value) {
            addCriterion("total_invoiced <>", value, "total_invoiced");
            return (Criteria) this;
        }

        public Criteria andTotal_invoicedGreaterThan(Double value) {
            addCriterion("total_invoiced >", value, "total_invoiced");
            return (Criteria) this;
        }

        public Criteria andTotal_invoicedGreaterThanOrEqualTo(Double value) {
            addCriterion("total_invoiced >=", value, "total_invoiced");
            return (Criteria) this;
        }

        public Criteria andTotal_invoicedLessThan(Double value) {
            addCriterion("total_invoiced <", value, "total_invoiced");
            return (Criteria) this;
        }

        public Criteria andTotal_invoicedLessThanOrEqualTo(Double value) {
            addCriterion("total_invoiced <=", value, "total_invoiced");
            return (Criteria) this;
        }

        public Criteria andTotal_invoicedIn(List<Double> values) {
            addCriterion("total_invoiced in", values, "total_invoiced");
            return (Criteria) this;
        }

        public Criteria andTotal_invoicedNotIn(List<Double> values) {
            addCriterion("total_invoiced not in", values, "total_invoiced");
            return (Criteria) this;
        }

        public Criteria andTotal_invoicedBetween(Double value1, Double value2) {
            addCriterion("total_invoiced between", value1, value2, "total_invoiced");
            return (Criteria) this;
        }

        public Criteria andTotal_invoicedNotBetween(Double value1, Double value2) {
            addCriterion("total_invoiced not between", value1, value2, "total_invoiced");
            return (Criteria) this;
        }

        public Criteria andTotal_paidIsNull() {
            addCriterion("total_paid is null");
            return (Criteria) this;
        }

        public Criteria andTotal_paidIsNotNull() {
            addCriterion("total_paid is not null");
            return (Criteria) this;
        }

        public Criteria andTotal_paidEqualTo(Double value) {
            addCriterion("total_paid =", value, "total_paid");
            return (Criteria) this;
        }

        public Criteria andTotal_paidNotEqualTo(Double value) {
            addCriterion("total_paid <>", value, "total_paid");
            return (Criteria) this;
        }

        public Criteria andTotal_paidGreaterThan(Double value) {
            addCriterion("total_paid >", value, "total_paid");
            return (Criteria) this;
        }

        public Criteria andTotal_paidGreaterThanOrEqualTo(Double value) {
            addCriterion("total_paid >=", value, "total_paid");
            return (Criteria) this;
        }

        public Criteria andTotal_paidLessThan(Double value) {
            addCriterion("total_paid <", value, "total_paid");
            return (Criteria) this;
        }

        public Criteria andTotal_paidLessThanOrEqualTo(Double value) {
            addCriterion("total_paid <=", value, "total_paid");
            return (Criteria) this;
        }

        public Criteria andTotal_paidIn(List<Double> values) {
            addCriterion("total_paid in", values, "total_paid");
            return (Criteria) this;
        }

        public Criteria andTotal_paidNotIn(List<Double> values) {
            addCriterion("total_paid not in", values, "total_paid");
            return (Criteria) this;
        }

        public Criteria andTotal_paidBetween(Double value1, Double value2) {
            addCriterion("total_paid between", value1, value2, "total_paid");
            return (Criteria) this;
        }

        public Criteria andTotal_paidNotBetween(Double value1, Double value2) {
            addCriterion("total_paid not between", value1, value2, "total_paid");
            return (Criteria) this;
        }

        public Criteria andTotal_not_paidIsNull() {
            addCriterion("total_not_paid is null");
            return (Criteria) this;
        }

        public Criteria andTotal_not_paidIsNotNull() {
            addCriterion("total_not_paid is not null");
            return (Criteria) this;
        }

        public Criteria andTotal_not_paidEqualTo(Double value) {
            addCriterion("total_not_paid =", value, "total_not_paid");
            return (Criteria) this;
        }

        public Criteria andTotal_not_paidNotEqualTo(Double value) {
            addCriterion("total_not_paid <>", value, "total_not_paid");
            return (Criteria) this;
        }

        public Criteria andTotal_not_paidGreaterThan(Double value) {
            addCriterion("total_not_paid >", value, "total_not_paid");
            return (Criteria) this;
        }

        public Criteria andTotal_not_paidGreaterThanOrEqualTo(Double value) {
            addCriterion("total_not_paid >=", value, "total_not_paid");
            return (Criteria) this;
        }

        public Criteria andTotal_not_paidLessThan(Double value) {
            addCriterion("total_not_paid <", value, "total_not_paid");
            return (Criteria) this;
        }

        public Criteria andTotal_not_paidLessThanOrEqualTo(Double value) {
            addCriterion("total_not_paid <=", value, "total_not_paid");
            return (Criteria) this;
        }

        public Criteria andTotal_not_paidIn(List<Double> values) {
            addCriterion("total_not_paid in", values, "total_not_paid");
            return (Criteria) this;
        }

        public Criteria andTotal_not_paidNotIn(List<Double> values) {
            addCriterion("total_not_paid not in", values, "total_not_paid");
            return (Criteria) this;
        }

        public Criteria andTotal_not_paidBetween(Double value1, Double value2) {
            addCriterion("total_not_paid between", value1, value2, "total_not_paid");
            return (Criteria) this;
        }

        public Criteria andTotal_not_paidNotBetween(Double value1, Double value2) {
            addCriterion("total_not_paid not between", value1, value2, "total_not_paid");
            return (Criteria) this;
        }

        public Criteria andOPTLOCKIsNull() {
            addCriterion("OPTLOCK is null");
            return (Criteria) this;
        }

        public Criteria andOPTLOCKIsNotNull() {
            addCriterion("OPTLOCK is not null");
            return (Criteria) this;
        }

        public Criteria andOPTLOCKEqualTo(Integer value) {
            addCriterion("OPTLOCK =", value, "OPTLOCK");
            return (Criteria) this;
        }

        public Criteria andOPTLOCKNotEqualTo(Integer value) {
            addCriterion("OPTLOCK <>", value, "OPTLOCK");
            return (Criteria) this;
        }

        public Criteria andOPTLOCKGreaterThan(Integer value) {
            addCriterion("OPTLOCK >", value, "OPTLOCK");
            return (Criteria) this;
        }

        public Criteria andOPTLOCKGreaterThanOrEqualTo(Integer value) {
            addCriterion("OPTLOCK >=", value, "OPTLOCK");
            return (Criteria) this;
        }

        public Criteria andOPTLOCKLessThan(Integer value) {
            addCriterion("OPTLOCK <", value, "OPTLOCK");
            return (Criteria) this;
        }

        public Criteria andOPTLOCKLessThanOrEqualTo(Integer value) {
            addCriterion("OPTLOCK <=", value, "OPTLOCK");
            return (Criteria) this;
        }

        public Criteria andOPTLOCKIn(List<Integer> values) {
            addCriterion("OPTLOCK in", values, "OPTLOCK");
            return (Criteria) this;
        }

        public Criteria andOPTLOCKNotIn(List<Integer> values) {
            addCriterion("OPTLOCK not in", values, "OPTLOCK");
            return (Criteria) this;
        }

        public Criteria andOPTLOCKBetween(Integer value1, Integer value2) {
            addCriterion("OPTLOCK between", value1, value2, "OPTLOCK");
            return (Criteria) this;
        }

        public Criteria andOPTLOCKNotBetween(Integer value1, Integer value2) {
            addCriterion("OPTLOCK not between", value1, value2, "OPTLOCK");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table process_run_total
     *
     * @mbggenerated do_not_delete_during_merge Tue Feb 18 21:28:38 IST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table process_run_total
     *
     * @mbggenerated Tue Feb 18 21:28:38 IST 2014
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}