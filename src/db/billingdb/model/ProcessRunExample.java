package db.billingdb.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ProcessRunExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table process_run
     *
     * @mbggenerated Tue Feb 18 21:28:38 IST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table process_run
     *
     * @mbggenerated Tue Feb 18 21:28:38 IST 2014
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table process_run
     *
     * @mbggenerated Tue Feb 18 21:28:38 IST 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_run
     *
     * @mbggenerated Tue Feb 18 21:28:38 IST 2014
     */
    public ProcessRunExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_run
     *
     * @mbggenerated Tue Feb 18 21:28:38 IST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_run
     *
     * @mbggenerated Tue Feb 18 21:28:38 IST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_run
     *
     * @mbggenerated Tue Feb 18 21:28:38 IST 2014
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_run
     *
     * @mbggenerated Tue Feb 18 21:28:38 IST 2014
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_run
     *
     * @mbggenerated Tue Feb 18 21:28:38 IST 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_run
     *
     * @mbggenerated Tue Feb 18 21:28:38 IST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_run
     *
     * @mbggenerated Tue Feb 18 21:28:38 IST 2014
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_run
     *
     * @mbggenerated Tue Feb 18 21:28:38 IST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_run
     *
     * @mbggenerated Tue Feb 18 21:28:38 IST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table process_run
     *
     * @mbggenerated Tue Feb 18 21:28:38 IST 2014
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table process_run
     *
     * @mbggenerated Tue Feb 18 21:28:38 IST 2014
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andProcess_idIsNull() {
            addCriterion("process_id is null");
            return (Criteria) this;
        }

        public Criteria andProcess_idIsNotNull() {
            addCriterion("process_id is not null");
            return (Criteria) this;
        }

        public Criteria andProcess_idEqualTo(Integer value) {
            addCriterion("process_id =", value, "process_id");
            return (Criteria) this;
        }

        public Criteria andProcess_idNotEqualTo(Integer value) {
            addCriterion("process_id <>", value, "process_id");
            return (Criteria) this;
        }

        public Criteria andProcess_idGreaterThan(Integer value) {
            addCriterion("process_id >", value, "process_id");
            return (Criteria) this;
        }

        public Criteria andProcess_idGreaterThanOrEqualTo(Integer value) {
            addCriterion("process_id >=", value, "process_id");
            return (Criteria) this;
        }

        public Criteria andProcess_idLessThan(Integer value) {
            addCriterion("process_id <", value, "process_id");
            return (Criteria) this;
        }

        public Criteria andProcess_idLessThanOrEqualTo(Integer value) {
            addCriterion("process_id <=", value, "process_id");
            return (Criteria) this;
        }

        public Criteria andProcess_idIn(List<Integer> values) {
            addCriterion("process_id in", values, "process_id");
            return (Criteria) this;
        }

        public Criteria andProcess_idNotIn(List<Integer> values) {
            addCriterion("process_id not in", values, "process_id");
            return (Criteria) this;
        }

        public Criteria andProcess_idBetween(Integer value1, Integer value2) {
            addCriterion("process_id between", value1, value2, "process_id");
            return (Criteria) this;
        }

        public Criteria andProcess_idNotBetween(Integer value1, Integer value2) {
            addCriterion("process_id not between", value1, value2, "process_id");
            return (Criteria) this;
        }

        public Criteria andRun_dateIsNull() {
            addCriterion("run_date is null");
            return (Criteria) this;
        }

        public Criteria andRun_dateIsNotNull() {
            addCriterion("run_date is not null");
            return (Criteria) this;
        }

        public Criteria andRun_dateEqualTo(Date value) {
            addCriterion("run_date =", value, "run_date");
            return (Criteria) this;
        }

        public Criteria andRun_dateNotEqualTo(Date value) {
            addCriterion("run_date <>", value, "run_date");
            return (Criteria) this;
        }

        public Criteria andRun_dateGreaterThan(Date value) {
            addCriterion("run_date >", value, "run_date");
            return (Criteria) this;
        }

        public Criteria andRun_dateGreaterThanOrEqualTo(Date value) {
            addCriterion("run_date >=", value, "run_date");
            return (Criteria) this;
        }

        public Criteria andRun_dateLessThan(Date value) {
            addCriterion("run_date <", value, "run_date");
            return (Criteria) this;
        }

        public Criteria andRun_dateLessThanOrEqualTo(Date value) {
            addCriterion("run_date <=", value, "run_date");
            return (Criteria) this;
        }

        public Criteria andRun_dateIn(List<Date> values) {
            addCriterion("run_date in", values, "run_date");
            return (Criteria) this;
        }

        public Criteria andRun_dateNotIn(List<Date> values) {
            addCriterion("run_date not in", values, "run_date");
            return (Criteria) this;
        }

        public Criteria andRun_dateBetween(Date value1, Date value2) {
            addCriterion("run_date between", value1, value2, "run_date");
            return (Criteria) this;
        }

        public Criteria andRun_dateNotBetween(Date value1, Date value2) {
            addCriterion("run_date not between", value1, value2, "run_date");
            return (Criteria) this;
        }

        public Criteria andStartedIsNull() {
            addCriterion("started is null");
            return (Criteria) this;
        }

        public Criteria andStartedIsNotNull() {
            addCriterion("started is not null");
            return (Criteria) this;
        }

        public Criteria andStartedEqualTo(Date value) {
            addCriterion("started =", value, "started");
            return (Criteria) this;
        }

        public Criteria andStartedNotEqualTo(Date value) {
            addCriterion("started <>", value, "started");
            return (Criteria) this;
        }

        public Criteria andStartedGreaterThan(Date value) {
            addCriterion("started >", value, "started");
            return (Criteria) this;
        }

        public Criteria andStartedGreaterThanOrEqualTo(Date value) {
            addCriterion("started >=", value, "started");
            return (Criteria) this;
        }

        public Criteria andStartedLessThan(Date value) {
            addCriterion("started <", value, "started");
            return (Criteria) this;
        }

        public Criteria andStartedLessThanOrEqualTo(Date value) {
            addCriterion("started <=", value, "started");
            return (Criteria) this;
        }

        public Criteria andStartedIn(List<Date> values) {
            addCriterion("started in", values, "started");
            return (Criteria) this;
        }

        public Criteria andStartedNotIn(List<Date> values) {
            addCriterion("started not in", values, "started");
            return (Criteria) this;
        }

        public Criteria andStartedBetween(Date value1, Date value2) {
            addCriterion("started between", value1, value2, "started");
            return (Criteria) this;
        }

        public Criteria andStartedNotBetween(Date value1, Date value2) {
            addCriterion("started not between", value1, value2, "started");
            return (Criteria) this;
        }

        public Criteria andFinishedIsNull() {
            addCriterion("finished is null");
            return (Criteria) this;
        }

        public Criteria andFinishedIsNotNull() {
            addCriterion("finished is not null");
            return (Criteria) this;
        }

        public Criteria andFinishedEqualTo(Date value) {
            addCriterion("finished =", value, "finished");
            return (Criteria) this;
        }

        public Criteria andFinishedNotEqualTo(Date value) {
            addCriterion("finished <>", value, "finished");
            return (Criteria) this;
        }

        public Criteria andFinishedGreaterThan(Date value) {
            addCriterion("finished >", value, "finished");
            return (Criteria) this;
        }

        public Criteria andFinishedGreaterThanOrEqualTo(Date value) {
            addCriterion("finished >=", value, "finished");
            return (Criteria) this;
        }

        public Criteria andFinishedLessThan(Date value) {
            addCriterion("finished <", value, "finished");
            return (Criteria) this;
        }

        public Criteria andFinishedLessThanOrEqualTo(Date value) {
            addCriterion("finished <=", value, "finished");
            return (Criteria) this;
        }

        public Criteria andFinishedIn(List<Date> values) {
            addCriterion("finished in", values, "finished");
            return (Criteria) this;
        }

        public Criteria andFinishedNotIn(List<Date> values) {
            addCriterion("finished not in", values, "finished");
            return (Criteria) this;
        }

        public Criteria andFinishedBetween(Date value1, Date value2) {
            addCriterion("finished between", value1, value2, "finished");
            return (Criteria) this;
        }

        public Criteria andFinishedNotBetween(Date value1, Date value2) {
            addCriterion("finished not between", value1, value2, "finished");
            return (Criteria) this;
        }

        public Criteria andPayment_finishedIsNull() {
            addCriterion("payment_finished is null");
            return (Criteria) this;
        }

        public Criteria andPayment_finishedIsNotNull() {
            addCriterion("payment_finished is not null");
            return (Criteria) this;
        }

        public Criteria andPayment_finishedEqualTo(Date value) {
            addCriterion("payment_finished =", value, "payment_finished");
            return (Criteria) this;
        }

        public Criteria andPayment_finishedNotEqualTo(Date value) {
            addCriterion("payment_finished <>", value, "payment_finished");
            return (Criteria) this;
        }

        public Criteria andPayment_finishedGreaterThan(Date value) {
            addCriterion("payment_finished >", value, "payment_finished");
            return (Criteria) this;
        }

        public Criteria andPayment_finishedGreaterThanOrEqualTo(Date value) {
            addCriterion("payment_finished >=", value, "payment_finished");
            return (Criteria) this;
        }

        public Criteria andPayment_finishedLessThan(Date value) {
            addCriterion("payment_finished <", value, "payment_finished");
            return (Criteria) this;
        }

        public Criteria andPayment_finishedLessThanOrEqualTo(Date value) {
            addCriterion("payment_finished <=", value, "payment_finished");
            return (Criteria) this;
        }

        public Criteria andPayment_finishedIn(List<Date> values) {
            addCriterion("payment_finished in", values, "payment_finished");
            return (Criteria) this;
        }

        public Criteria andPayment_finishedNotIn(List<Date> values) {
            addCriterion("payment_finished not in", values, "payment_finished");
            return (Criteria) this;
        }

        public Criteria andPayment_finishedBetween(Date value1, Date value2) {
            addCriterion("payment_finished between", value1, value2, "payment_finished");
            return (Criteria) this;
        }

        public Criteria andPayment_finishedNotBetween(Date value1, Date value2) {
            addCriterion("payment_finished not between", value1, value2, "payment_finished");
            return (Criteria) this;
        }

        public Criteria andInvoices_generatedIsNull() {
            addCriterion("invoices_generated is null");
            return (Criteria) this;
        }

        public Criteria andInvoices_generatedIsNotNull() {
            addCriterion("invoices_generated is not null");
            return (Criteria) this;
        }

        public Criteria andInvoices_generatedEqualTo(Integer value) {
            addCriterion("invoices_generated =", value, "invoices_generated");
            return (Criteria) this;
        }

        public Criteria andInvoices_generatedNotEqualTo(Integer value) {
            addCriterion("invoices_generated <>", value, "invoices_generated");
            return (Criteria) this;
        }

        public Criteria andInvoices_generatedGreaterThan(Integer value) {
            addCriterion("invoices_generated >", value, "invoices_generated");
            return (Criteria) this;
        }

        public Criteria andInvoices_generatedGreaterThanOrEqualTo(Integer value) {
            addCriterion("invoices_generated >=", value, "invoices_generated");
            return (Criteria) this;
        }

        public Criteria andInvoices_generatedLessThan(Integer value) {
            addCriterion("invoices_generated <", value, "invoices_generated");
            return (Criteria) this;
        }

        public Criteria andInvoices_generatedLessThanOrEqualTo(Integer value) {
            addCriterion("invoices_generated <=", value, "invoices_generated");
            return (Criteria) this;
        }

        public Criteria andInvoices_generatedIn(List<Integer> values) {
            addCriterion("invoices_generated in", values, "invoices_generated");
            return (Criteria) this;
        }

        public Criteria andInvoices_generatedNotIn(List<Integer> values) {
            addCriterion("invoices_generated not in", values, "invoices_generated");
            return (Criteria) this;
        }

        public Criteria andInvoices_generatedBetween(Integer value1, Integer value2) {
            addCriterion("invoices_generated between", value1, value2, "invoices_generated");
            return (Criteria) this;
        }

        public Criteria andInvoices_generatedNotBetween(Integer value1, Integer value2) {
            addCriterion("invoices_generated not between", value1, value2, "invoices_generated");
            return (Criteria) this;
        }

        public Criteria andOPTLOCKIsNull() {
            addCriterion("OPTLOCK is null");
            return (Criteria) this;
        }

        public Criteria andOPTLOCKIsNotNull() {
            addCriterion("OPTLOCK is not null");
            return (Criteria) this;
        }

        public Criteria andOPTLOCKEqualTo(Integer value) {
            addCriterion("OPTLOCK =", value, "OPTLOCK");
            return (Criteria) this;
        }

        public Criteria andOPTLOCKNotEqualTo(Integer value) {
            addCriterion("OPTLOCK <>", value, "OPTLOCK");
            return (Criteria) this;
        }

        public Criteria andOPTLOCKGreaterThan(Integer value) {
            addCriterion("OPTLOCK >", value, "OPTLOCK");
            return (Criteria) this;
        }

        public Criteria andOPTLOCKGreaterThanOrEqualTo(Integer value) {
            addCriterion("OPTLOCK >=", value, "OPTLOCK");
            return (Criteria) this;
        }

        public Criteria andOPTLOCKLessThan(Integer value) {
            addCriterion("OPTLOCK <", value, "OPTLOCK");
            return (Criteria) this;
        }

        public Criteria andOPTLOCKLessThanOrEqualTo(Integer value) {
            addCriterion("OPTLOCK <=", value, "OPTLOCK");
            return (Criteria) this;
        }

        public Criteria andOPTLOCKIn(List<Integer> values) {
            addCriterion("OPTLOCK in", values, "OPTLOCK");
            return (Criteria) this;
        }

        public Criteria andOPTLOCKNotIn(List<Integer> values) {
            addCriterion("OPTLOCK not in", values, "OPTLOCK");
            return (Criteria) this;
        }

        public Criteria andOPTLOCKBetween(Integer value1, Integer value2) {
            addCriterion("OPTLOCK between", value1, value2, "OPTLOCK");
            return (Criteria) this;
        }

        public Criteria andOPTLOCKNotBetween(Integer value1, Integer value2) {
            addCriterion("OPTLOCK not between", value1, value2, "OPTLOCK");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table process_run
     *
     * @mbggenerated do_not_delete_during_merge Tue Feb 18 21:28:38 IST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table process_run
     *
     * @mbggenerated Tue Feb 18 21:28:38 IST 2014
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}