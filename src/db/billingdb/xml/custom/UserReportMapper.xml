<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="db.billingdb.dao.custom.UserReportMapper">
	<resultMap id="SimpleUserMap" type="db.billingdb.model.custom.SimpleUser">
		<result column="user_id" property="id" jdbcType="INTEGER" />
		<result column="fullname" property="fullname" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="UserInfoMap" type="db.billingdb.model.custom.info.UserInfo"
		extends="SimpleUserMap">
		<result column="city" property="city" jdbcType="INTEGER" />
		<result column="username" property="username" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="OutstandingMap" type="db.billingdb.model.custom.OutstandingUser">
		<result column="user_id" property="id" jdbcType="INTEGER"/>
		<result column="balance" property="balance" jdbcType="DOUBLE" />
	</resultMap>

	<resultMap id="CustomerMap" type="db.billingdb.model.custom.Customer"
		extends="UserInfoMap" />

	<select id="getSalesmenList" resultMap="SimpleUserMap"
		parameterType="int">
		select
		urm.user_id 'user_id',
		cf.content 'fullname'
		from
		user_role_map urm
		join contact c on urm.role_id = 9 AND c.user_id = urm.user_id AND
		c.deleted = false
		<if test="city != 0">
			AND c.city = #{city, jdbcType=INTEGER}
		</if>
		join contact_field cf on cf.contact_id = c.id AND cf.type_id = 432
	</select>

	<select id="getDistibutorList" resultMap="SimpleUserMap"
		parameterType="int">
		select
		urm.user_id 'user_id',
		cf.content 'fullname'
		from
		user_role_map urm
		join contact c on urm.role_id = 4 AND c.user_id = urm.user_id AND
		c.deleted = false
		<if test="city != 0">
			AND c.city = #{city, jdbcType=INTEGER}
		</if>
		join contact_field cf on cf.contact_id = c.id AND cf.type_id = 432
	</select>

	<select id="getUserInfoByIDs" resultMap="UserInfoMap">
		select c.user_id 'user_id',
		cf.content 'fullname',
		cf1.content 'username',
		c.city 'city'
		from
		contact c
		join contact_field cf on cf.contact_id = c.id and cf.type_id = 432
		join
		contact_field cf1 on cf1.contact_id = c.id and cf1.type_id = 434
		where
		c.user_id in
		<foreach item="user" index="index" collection="list" open="("
			separator="," close=")">
			#{user}
		</foreach>

	</select>

	<select id="getUsersByName" resultMap="SimpleUserMap"
		parameterType="map">
		select
		c.user_id user_id,
		cf.content fullname
		from
		contact c,
		contact_field cf
		Where
		cf.contact_id = c.id
		<if test="city != 0">
			AND c.city = #{city, jdbcType=INTEGER}
		</if>
		AND
		cf.type_id = 432
		AND
		cf.content like #{name, jdbcType=VARCHAR}
	</select>

	<select id="getActiveUsers" parameterType="Date">
		select
		distinct
		po.user_id
		from
		purchase_order po
		where
		po.active_until &gt;
		#{date,
		jdbcType=TIMESTAMP}
		order by po.active_until desc
	</select>

	<select id="getAllCustomers" resultMap="CustomerMap">
		select
		urm.user_id
		'user_id',
		c.city 'city',
		cf2.content 'username',
		cf1.content 'fullname'
		from
		user_role_map urm
		join contact c on urm.role_id = 5 AND c.user_id =
		urm.user_id AND
		c.deleted = false
		join contact_field cf1 on
		cf1.contact_id = c.id AND cf1.type_id = 432
		join contact_field cf2 on
		cf2.contact_id = c.id AND cf2.type_id = 434
	</select>

	<select id="getOutstandingUsers" resultMap="OutstandingMap"
		parameterType="db.billingdb.model.custom.OutstandingUserCondition">
		select
		cc.id user_id,
		(invoice_balance - payment_balance)
		balance
		<!-- cf.content -->
		<!-- 'fullname', -->
		<!-- cf1.content 'username', -->
		<!-- c.city 'city' -->
		from (
		select
		i.user_id
		id,
		sum(balance) invoice_balance,
		ifnull(v.payment_balance, 0)
		payment_balance
		from
		invoice i left join
		(select
		user_id, sum(balance) as
		payment_balance
		from
		payment
		where
		deleted
		= 0
		and
		user_id in (select
		b.id
		from
		base_user b
		where
		b.entity_id = 1
		<if test="currencyId != 0">
			AND b.currency_id = #{currencyId,jdbcType=INTEGER}
		</if>
		and
		<choose>
			<when test="deleted">
				b.deleted = 1
			</when>
			<otherwise>
				b.deleted = 0
			</otherwise>
		</choose>
		)
		group by user_id) v
		on
		i.user_id = v.user_id where
		i.deleted = 0 and
		i.user_id in (select
		b.id
		from
		base_user b
		where
		b.entity_id = 1
		<if test="currencyId != 0">
			AND b.currency_id = #{currencyId,jdbcType=INTEGER}
		</if>
		and
		<choose>
			<when test="deleted">
				b.deleted = 1
			</when>
			<otherwise>
				b.deleted = 0
			</otherwise>
		</choose>
		)
		group by i.user_id
		union
		select
		i.user_id id,
		sum(balance)
		invoice_balance, ifnull(v.payment_balance, 0)
		payment_balance
		from
		invoice i right join (select
		user_id, sum(balance)
		as payment_balance
		from
		payment
		where
		deleted = 0
		and
		user_id in (select
		b.id
		from
		base_user b
		where
		b.entity_id = 1
		<if test="currencyId != 0">
			AND b.currency_id = #{currencyId,jdbcType=INTEGER}
		</if>
		and
		<choose>
			<when test="deleted">
				b.deleted = 1
			</when>
			<otherwise>
				b.deleted = 0
			</otherwise>
		</choose>
		)
		group by user_id) v
		on
		i.user_id = v.user_id where
		i.deleted = 0 and
		i.user_id in (select
		b.id
		from
		base_user b
		where
		b.entity_id = 1
		<if test="currencyId != 0">
			AND b.currency_id = #{currencyId,jdbcType=INTEGER}
		</if>
		and
		<choose>
			<when test="deleted">
				b.deleted = 1
			</when>
			<otherwise>
				b.deleted = 0
			</otherwise>
		</choose>
		)
		group by v.user_id
		) cc
		<if test="city != 0">
			join contact c on c.user_id =
			cc.id
			AND c.city =
			#{city,jdbcType=INTEGER}
		</if>
		<!-- join contact_field cf on cf.contact_id = c.id and cf.type_id = 432 -->
		<!-- join contact_field cf1 on cf1.contact_id = c.id and cf1.type_id = 
			434 -->
		where (invoice_balance - payment_balance) > 0;
	</select>
</mapper>
